// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/metric/metric.proto

/*
Package metric_go_proto is a generated protocol buffer package.

It is generated from these files:
	pkg/metric/metric.proto

It has these top-level messages:
	MetricMetadata
	MetricRegistration
	MetricValue
	MetricUpdate
*/
package metric_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetricMetadata_Type int32

const (
	MetricMetadata_UINT64 MetricMetadata_Type = 0
)

var MetricMetadata_Type_name = map[int32]string{
	0: "UINT64",
}
var MetricMetadata_Type_value = map[string]int32{
	"UINT64": 0,
}

func (x MetricMetadata_Type) String() string {
	return proto.EnumName(MetricMetadata_Type_name, int32(x))
}
func (MetricMetadata_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type MetricMetadata struct {
	Name        string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string              `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Cumulative  bool                `protobuf:"varint,3,opt,name=cumulative" json:"cumulative,omitempty"`
	Sync        bool                `protobuf:"varint,4,opt,name=sync" json:"sync,omitempty"`
	Type        MetricMetadata_Type `protobuf:"varint,5,opt,name=type,enum=gvisor.MetricMetadata_Type" json:"type,omitempty"`
}

func (m *MetricMetadata) Reset()                    { *m = MetricMetadata{} }
func (m *MetricMetadata) String() string            { return proto.CompactTextString(m) }
func (*MetricMetadata) ProtoMessage()               {}
func (*MetricMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MetricMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MetricMetadata) GetCumulative() bool {
	if m != nil {
		return m.Cumulative
	}
	return false
}

func (m *MetricMetadata) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

func (m *MetricMetadata) GetType() MetricMetadata_Type {
	if m != nil {
		return m.Type
	}
	return MetricMetadata_UINT64
}

type MetricRegistration struct {
	Metrics []*MetricMetadata `protobuf:"bytes,1,rep,name=metrics" json:"metrics,omitempty"`
}

func (m *MetricRegistration) Reset()                    { *m = MetricRegistration{} }
func (m *MetricRegistration) String() string            { return proto.CompactTextString(m) }
func (*MetricRegistration) ProtoMessage()               {}
func (*MetricRegistration) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MetricRegistration) GetMetrics() []*MetricMetadata {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type MetricValue struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*MetricValue_Uint64Value
	Value isMetricValue_Value `protobuf_oneof:"value"`
}

func (m *MetricValue) Reset()                    { *m = MetricValue{} }
func (m *MetricValue) String() string            { return proto.CompactTextString(m) }
func (*MetricValue) ProtoMessage()               {}
func (*MetricValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isMetricValue_Value interface{ isMetricValue_Value() }

type MetricValue_Uint64Value struct {
	Uint64Value uint64 `protobuf:"varint,2,opt,name=uint64_value,json=uint64Value,oneof"`
}

func (*MetricValue_Uint64Value) isMetricValue_Value() {}

func (m *MetricValue) GetValue() isMetricValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MetricValue) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricValue) GetUint64Value() uint64 {
	if x, ok := m.GetValue().(*MetricValue_Uint64Value); ok {
		return x.Uint64Value
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MetricValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MetricValue_OneofMarshaler, _MetricValue_OneofUnmarshaler, _MetricValue_OneofSizer, []interface{}{
		(*MetricValue_Uint64Value)(nil),
	}
}

func _MetricValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MetricValue)
	// value
	switch x := m.Value.(type) {
	case *MetricValue_Uint64Value:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Uint64Value))
	case nil:
	default:
		return fmt.Errorf("MetricValue.Value has unexpected type %T", x)
	}
	return nil
}

func _MetricValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MetricValue)
	switch tag {
	case 2: // value.uint64_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &MetricValue_Uint64Value{x}
		return true, err
	default:
		return false, nil
	}
}

func _MetricValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MetricValue)
	// value
	switch x := m.Value.(type) {
	case *MetricValue_Uint64Value:
		n += proto.SizeVarint(2<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Uint64Value))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MetricUpdate struct {
	Metrics []*MetricValue `protobuf:"bytes,1,rep,name=metrics" json:"metrics,omitempty"`
}

func (m *MetricUpdate) Reset()                    { *m = MetricUpdate{} }
func (m *MetricUpdate) String() string            { return proto.CompactTextString(m) }
func (*MetricUpdate) ProtoMessage()               {}
func (*MetricUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MetricUpdate) GetMetrics() []*MetricValue {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*MetricMetadata)(nil), "gvisor.MetricMetadata")
	proto.RegisterType((*MetricRegistration)(nil), "gvisor.MetricRegistration")
	proto.RegisterType((*MetricValue)(nil), "gvisor.MetricValue")
	proto.RegisterType((*MetricUpdate)(nil), "gvisor.MetricUpdate")
	proto.RegisterEnum("gvisor.MetricMetadata_Type", MetricMetadata_Type_name, MetricMetadata_Type_value)
}

func init() { proto.RegisterFile("pkg/metric/metric.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x17, 0xd7, 0x75, 0xfa, 0x3a, 0x86, 0x44, 0xd0, 0x80, 0x20, 0xa5, 0x5e, 0x7a, 0xb1,
	0x93, 0x39, 0x76, 0xf3, 0xe2, 0x41, 0xf4, 0x30, 0x85, 0xb0, 0x79, 0x95, 0xd8, 0x86, 0x12, 0x5c,
	0xdb, 0xd0, 0xa4, 0x85, 0xfe, 0x75, 0xfe, 0x6b, 0xd2, 0x17, 0x95, 0x4d, 0x76, 0xca, 0xcb, 0xfb,
	0xde, 0xf7, 0xf1, 0xcb, 0x0b, 0x5c, 0xe8, 0xcf, 0x7c, 0x56, 0x48, 0x5b, 0xab, 0xf4, 0xe7, 0x48,
	0x74, 0x5d, 0xd9, 0x8a, 0xfa, 0x79, 0xab, 0x4c, 0x55, 0x47, 0x5f, 0x04, 0xa6, 0x2b, 0x14, 0x56,
	0xd2, 0x8a, 0x4c, 0x58, 0x41, 0x29, 0x78, 0xa5, 0x28, 0x24, 0x23, 0x21, 0x89, 0x4f, 0x38, 0xd6,
	0x34, 0x84, 0x20, 0x93, 0x26, 0xad, 0x95, 0xb6, 0xaa, 0x2a, 0xd9, 0x11, 0x4a, 0xbb, 0x2d, 0x7a,
	0x05, 0x90, 0x36, 0x45, 0xb3, 0x15, 0x56, 0xb5, 0x92, 0x0d, 0x43, 0x12, 0x1f, 0xf3, 0x9d, 0x4e,
	0x9f, 0x6a, 0xba, 0x32, 0x65, 0x1e, 0x2a, 0x58, 0xd3, 0x19, 0x78, 0xb6, 0xd3, 0x92, 0x8d, 0x42,
	0x12, 0x4f, 0xe7, 0x97, 0x89, 0x63, 0x4a, 0xf6, 0x79, 0x92, 0x75, 0xa7, 0x25, 0xc7, 0xc1, 0x88,
	0x82, 0xd7, 0xdf, 0x28, 0x80, 0xbf, 0x79, 0x7e, 0x59, 0x2f, 0x17, 0xa7, 0x83, 0xe8, 0x11, 0xa8,
	0x33, 0x70, 0x99, 0x2b, 0x63, 0x6b, 0x81, 0x38, 0xb7, 0x30, 0x76, 0xef, 0x35, 0x8c, 0x84, 0xc3,
	0x38, 0x98, 0x9f, 0x1f, 0x4e, 0xe7, 0xbf, 0x63, 0xd1, 0x2b, 0x04, 0x4e, 0x7a, 0x13, 0xdb, 0x46,
	0x1e, 0xdc, 0xc2, 0x35, 0x4c, 0x1a, 0x55, 0xda, 0xe5, 0xe2, 0xbd, 0xed, 0x67, 0x70, 0x0d, 0xde,
	0xd3, 0x80, 0x07, 0xae, 0x8b, 0xc6, 0x87, 0x31, 0x8c, 0x50, 0x8d, 0xee, 0x61, 0xe2, 0x02, 0x37,
	0x3a, 0x13, 0x56, 0xd2, 0x9b, 0xff, 0x48, 0x67, 0xfb, 0x48, 0x68, 0xff, 0xe3, 0xf9, 0xf0, 0xf1,
	0xa3, 0xee, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x7f, 0xcb, 0x46, 0xc3, 0x01, 0x00, 0x00,
}
