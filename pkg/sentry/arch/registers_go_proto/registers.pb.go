// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/sentry/arch/registers.proto

package registers_go_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AMD64Registers struct {
	Rax                  uint64   `protobuf:"varint,1,opt,name=rax,proto3" json:"rax,omitempty"`
	Rbx                  uint64   `protobuf:"varint,2,opt,name=rbx,proto3" json:"rbx,omitempty"`
	Rcx                  uint64   `protobuf:"varint,3,opt,name=rcx,proto3" json:"rcx,omitempty"`
	Rdx                  uint64   `protobuf:"varint,4,opt,name=rdx,proto3" json:"rdx,omitempty"`
	Rsi                  uint64   `protobuf:"varint,5,opt,name=rsi,proto3" json:"rsi,omitempty"`
	Rdi                  uint64   `protobuf:"varint,6,opt,name=rdi,proto3" json:"rdi,omitempty"`
	Rsp                  uint64   `protobuf:"varint,7,opt,name=rsp,proto3" json:"rsp,omitempty"`
	Rbp                  uint64   `protobuf:"varint,8,opt,name=rbp,proto3" json:"rbp,omitempty"`
	R8                   uint64   `protobuf:"varint,9,opt,name=r8,proto3" json:"r8,omitempty"`
	R9                   uint64   `protobuf:"varint,10,opt,name=r9,proto3" json:"r9,omitempty"`
	R10                  uint64   `protobuf:"varint,11,opt,name=r10,proto3" json:"r10,omitempty"`
	R11                  uint64   `protobuf:"varint,12,opt,name=r11,proto3" json:"r11,omitempty"`
	R12                  uint64   `protobuf:"varint,13,opt,name=r12,proto3" json:"r12,omitempty"`
	R13                  uint64   `protobuf:"varint,14,opt,name=r13,proto3" json:"r13,omitempty"`
	R14                  uint64   `protobuf:"varint,15,opt,name=r14,proto3" json:"r14,omitempty"`
	R15                  uint64   `protobuf:"varint,16,opt,name=r15,proto3" json:"r15,omitempty"`
	Rip                  uint64   `protobuf:"varint,17,opt,name=rip,proto3" json:"rip,omitempty"`
	Rflags               uint64   `protobuf:"varint,18,opt,name=rflags,proto3" json:"rflags,omitempty"`
	OrigRax              uint64   `protobuf:"varint,19,opt,name=orig_rax,json=origRax,proto3" json:"orig_rax,omitempty"`
	Cs                   uint64   `protobuf:"varint,20,opt,name=cs,proto3" json:"cs,omitempty"`
	Ds                   uint64   `protobuf:"varint,21,opt,name=ds,proto3" json:"ds,omitempty"`
	Es                   uint64   `protobuf:"varint,22,opt,name=es,proto3" json:"es,omitempty"`
	Fs                   uint64   `protobuf:"varint,23,opt,name=fs,proto3" json:"fs,omitempty"`
	Gs                   uint64   `protobuf:"varint,24,opt,name=gs,proto3" json:"gs,omitempty"`
	Ss                   uint64   `protobuf:"varint,25,opt,name=ss,proto3" json:"ss,omitempty"`
	FsBase               uint64   `protobuf:"varint,26,opt,name=fs_base,json=fsBase,proto3" json:"fs_base,omitempty"`
	GsBase               uint64   `protobuf:"varint,27,opt,name=gs_base,json=gsBase,proto3" json:"gs_base,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AMD64Registers) Reset()         { *m = AMD64Registers{} }
func (m *AMD64Registers) String() string { return proto.CompactTextString(m) }
func (*AMD64Registers) ProtoMessage()    {}
func (*AMD64Registers) Descriptor() ([]byte, []int) {
	return fileDescriptor_registers_20699a1dda6a6428, []int{0}
}
func (m *AMD64Registers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AMD64Registers.Unmarshal(m, b)
}
func (m *AMD64Registers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AMD64Registers.Marshal(b, m, deterministic)
}
func (dst *AMD64Registers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AMD64Registers.Merge(dst, src)
}
func (m *AMD64Registers) XXX_Size() int {
	return xxx_messageInfo_AMD64Registers.Size(m)
}
func (m *AMD64Registers) XXX_DiscardUnknown() {
	xxx_messageInfo_AMD64Registers.DiscardUnknown(m)
}

var xxx_messageInfo_AMD64Registers proto.InternalMessageInfo

func (m *AMD64Registers) GetRax() uint64 {
	if m != nil {
		return m.Rax
	}
	return 0
}

func (m *AMD64Registers) GetRbx() uint64 {
	if m != nil {
		return m.Rbx
	}
	return 0
}

func (m *AMD64Registers) GetRcx() uint64 {
	if m != nil {
		return m.Rcx
	}
	return 0
}

func (m *AMD64Registers) GetRdx() uint64 {
	if m != nil {
		return m.Rdx
	}
	return 0
}

func (m *AMD64Registers) GetRsi() uint64 {
	if m != nil {
		return m.Rsi
	}
	return 0
}

func (m *AMD64Registers) GetRdi() uint64 {
	if m != nil {
		return m.Rdi
	}
	return 0
}

func (m *AMD64Registers) GetRsp() uint64 {
	if m != nil {
		return m.Rsp
	}
	return 0
}

func (m *AMD64Registers) GetRbp() uint64 {
	if m != nil {
		return m.Rbp
	}
	return 0
}

func (m *AMD64Registers) GetR8() uint64 {
	if m != nil {
		return m.R8
	}
	return 0
}

func (m *AMD64Registers) GetR9() uint64 {
	if m != nil {
		return m.R9
	}
	return 0
}

func (m *AMD64Registers) GetR10() uint64 {
	if m != nil {
		return m.R10
	}
	return 0
}

func (m *AMD64Registers) GetR11() uint64 {
	if m != nil {
		return m.R11
	}
	return 0
}

func (m *AMD64Registers) GetR12() uint64 {
	if m != nil {
		return m.R12
	}
	return 0
}

func (m *AMD64Registers) GetR13() uint64 {
	if m != nil {
		return m.R13
	}
	return 0
}

func (m *AMD64Registers) GetR14() uint64 {
	if m != nil {
		return m.R14
	}
	return 0
}

func (m *AMD64Registers) GetR15() uint64 {
	if m != nil {
		return m.R15
	}
	return 0
}

func (m *AMD64Registers) GetRip() uint64 {
	if m != nil {
		return m.Rip
	}
	return 0
}

func (m *AMD64Registers) GetRflags() uint64 {
	if m != nil {
		return m.Rflags
	}
	return 0
}

func (m *AMD64Registers) GetOrigRax() uint64 {
	if m != nil {
		return m.OrigRax
	}
	return 0
}

func (m *AMD64Registers) GetCs() uint64 {
	if m != nil {
		return m.Cs
	}
	return 0
}

func (m *AMD64Registers) GetDs() uint64 {
	if m != nil {
		return m.Ds
	}
	return 0
}

func (m *AMD64Registers) GetEs() uint64 {
	if m != nil {
		return m.Es
	}
	return 0
}

func (m *AMD64Registers) GetFs() uint64 {
	if m != nil {
		return m.Fs
	}
	return 0
}

func (m *AMD64Registers) GetGs() uint64 {
	if m != nil {
		return m.Gs
	}
	return 0
}

func (m *AMD64Registers) GetSs() uint64 {
	if m != nil {
		return m.Ss
	}
	return 0
}

func (m *AMD64Registers) GetFsBase() uint64 {
	if m != nil {
		return m.FsBase
	}
	return 0
}

func (m *AMD64Registers) GetGsBase() uint64 {
	if m != nil {
		return m.GsBase
	}
	return 0
}

type Registers struct {
	// Types that are valid to be assigned to Arch:
	//	*Registers_Amd64
	Arch                 isRegisters_Arch `protobuf_oneof:"arch"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Registers) Reset()         { *m = Registers{} }
func (m *Registers) String() string { return proto.CompactTextString(m) }
func (*Registers) ProtoMessage()    {}
func (*Registers) Descriptor() ([]byte, []int) {
	return fileDescriptor_registers_20699a1dda6a6428, []int{1}
}
func (m *Registers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Registers.Unmarshal(m, b)
}
func (m *Registers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Registers.Marshal(b, m, deterministic)
}
func (dst *Registers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Registers.Merge(dst, src)
}
func (m *Registers) XXX_Size() int {
	return xxx_messageInfo_Registers.Size(m)
}
func (m *Registers) XXX_DiscardUnknown() {
	xxx_messageInfo_Registers.DiscardUnknown(m)
}

var xxx_messageInfo_Registers proto.InternalMessageInfo

type isRegisters_Arch interface {
	isRegisters_Arch()
}

type Registers_Amd64 struct {
	Amd64 *AMD64Registers `protobuf:"bytes,1,opt,name=amd64,proto3,oneof"`
}

func (*Registers_Amd64) isRegisters_Arch() {}

func (m *Registers) GetArch() isRegisters_Arch {
	if m != nil {
		return m.Arch
	}
	return nil
}

func (m *Registers) GetAmd64() *AMD64Registers {
	if x, ok := m.GetArch().(*Registers_Amd64); ok {
		return x.Amd64
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Registers) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Registers_OneofMarshaler, _Registers_OneofUnmarshaler, _Registers_OneofSizer, []interface{}{
		(*Registers_Amd64)(nil),
	}
}

func _Registers_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Registers)
	// arch
	switch x := m.Arch.(type) {
	case *Registers_Amd64:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Amd64); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Registers.Arch has unexpected type %T", x)
	}
	return nil
}

func _Registers_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Registers)
	switch tag {
	case 1: // arch.amd64
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AMD64Registers)
		err := b.DecodeMessage(msg)
		m.Arch = &Registers_Amd64{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Registers_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Registers)
	// arch
	switch x := m.Arch.(type) {
	case *Registers_Amd64:
		s := proto.Size(x.Amd64)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*AMD64Registers)(nil), "gvisor.AMD64Registers")
	proto.RegisterType((*Registers)(nil), "gvisor.Registers")
}

func init() {
	proto.RegisterFile("pkg/sentry/arch/registers.proto", fileDescriptor_registers_20699a1dda6a6428)
}

var fileDescriptor_registers_20699a1dda6a6428 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0x4d, 0x6f, 0xe2, 0x30,
	0x10, 0x86, 0x17, 0x08, 0x01, 0xcc, 0x2e, 0xcb, 0x66, 0x5b, 0x18, 0xda, 0x43, 0x2b, 0x4e, 0x3d,
	0x05, 0x02, 0x01, 0xc1, 0xb1, 0xb4, 0x87, 0x5e, 0x7a, 0xc9, 0x1f, 0x40, 0xf9, 0x74, 0xad, 0x7e,
	0xc4, 0xf2, 0xa0, 0x2a, 0x3d, 0xf7, 0x8f, 0x57, 0xf6, 0xd8, 0xaa, 0x7a, 0xcb, 0xf3, 0xcc, 0x6b,
	0x39, 0x93, 0xbc, 0xec, 0x4a, 0x3e, 0xf3, 0x05, 0x96, 0x6f, 0x27, 0xf5, 0xb1, 0x48, 0x55, 0xfe,
	0xb4, 0x50, 0x25, 0x17, 0x78, 0x2a, 0x15, 0x86, 0x52, 0xd5, 0xa7, 0x3a, 0xf0, 0xf9, 0xbb, 0xc0,
	0x5a, 0xcd, 0x3f, 0x3d, 0x36, 0xba, 0x7d, 0xbc, 0xdf, 0xc6, 0x89, 0x0b, 0x04, 0x63, 0xd6, 0x51,
	0x69, 0x03, 0xad, 0xeb, 0xd6, 0x8d, 0x97, 0xe8, 0x47, 0x63, 0xb2, 0x06, 0xda, 0xd6, 0x64, 0x64,
	0xf2, 0x06, 0x3a, 0xd6, 0xe4, 0x64, 0x8a, 0x06, 0x3c, 0x6b, 0x0a, 0x32, 0x28, 0xa0, 0x6b, 0x0d,
	0x0a, 0xca, 0x08, 0xf0, 0x5d, 0x86, 0x0c, 0x4a, 0xe8, 0xb9, 0x8c, 0xa4, 0xbb, 0x24, 0xf4, 0xdd,
	0x5d, 0x32, 0x18, 0xb1, 0xb6, 0xda, 0xc1, 0xc0, 0x88, 0xb6, 0xda, 0x19, 0xde, 0x03, 0xb3, 0xbc,
	0x37, 0x27, 0xa2, 0x25, 0x0c, 0xed, 0x89, 0x68, 0x49, 0x26, 0x82, 0xdf, 0xce, 0x44, 0x64, 0x56,
	0xf0, 0xc7, 0x99, 0x15, 0x99, 0x35, 0x8c, 0x9c, 0x59, 0x93, 0x89, 0xe1, 0xaf, 0x33, 0x31, 0x99,
	0x0d, 0x8c, 0x9d, 0xd9, 0x18, 0x23, 0x24, 0xfc, 0xb3, 0x46, 0xc8, 0x60, 0xc2, 0x7c, 0x55, 0xbd,
	0xa4, 0x1c, 0x21, 0x30, 0xd2, 0x52, 0x30, 0x63, 0xfd, 0x5a, 0x09, 0x7e, 0xd4, 0x9f, 0xf2, 0xbf,
	0x99, 0xf4, 0x34, 0x27, 0x69, 0xa3, 0x17, 0xc8, 0x11, 0xce, 0x68, 0x81, 0x1c, 0x35, 0x17, 0x08,
	0xe7, 0xc4, 0x85, 0xe1, 0x12, 0x61, 0x42, 0x5c, 0x1a, 0xae, 0x10, 0xa6, 0xc4, 0x95, 0x61, 0x8e,
	0x00, 0xc4, 0xdc, 0x30, 0x22, 0xcc, 0x88, 0x11, 0x83, 0x29, 0xeb, 0x55, 0x78, 0xcc, 0x52, 0x2c,
	0xe1, 0x82, 0xde, 0xa9, 0xc2, 0x43, 0x8a, 0xa5, 0x1e, 0x70, 0x3b, 0xb8, 0xa4, 0x01, 0x37, 0x83,
	0xf9, 0x1d, 0x1b, 0x7c, 0xff, 0xff, 0x90, 0x75, 0xd3, 0xd7, 0x62, 0x1b, 0x9b, 0x06, 0x0c, 0x57,
	0x93, 0x90, 0xaa, 0x12, 0xfe, 0xac, 0xc9, 0xc3, 0xaf, 0x84, 0x62, 0x07, 0x9f, 0x79, 0xba, 0x62,
	0x99, 0x6f, 0x9a, 0xb5, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xcc, 0x03, 0x27, 0x7c, 0x02,
	0x00, 0x00,
}
