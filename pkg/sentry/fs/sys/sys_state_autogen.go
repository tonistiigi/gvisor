// automatically generated by stateify.

package sys

import (
	"gvisor.googlesource.com/gvisor/pkg/state"
)

func (x *cpunum) beforeSave() {}
func (x *cpunum) save(m state.Map) {
	x.beforeSave()
	m.Save("Entry", &x.Entry)
}

func (x *cpunum) afterLoad() {}
func (x *cpunum) load(m state.Map) {
	m.Load("Entry", &x.Entry)
}

func (x *filesystem) beforeSave() {}
func (x *filesystem) save(m state.Map) {
	x.beforeSave()
}

func (x *filesystem) afterLoad() {}
func (x *filesystem) load(m state.Map) {
}

func (x *sys) beforeSave() {}
func (x *sys) save(m state.Map) {
	x.beforeSave()
	m.Save("Dir", &x.Dir)
}

func (x *sys) afterLoad() {}
func (x *sys) load(m state.Map) {
	m.Load("Dir", &x.Dir)
}

func init() {
	state.Register("sys.cpunum", (*cpunum)(nil), state.Fns{Save: (*cpunum).save, Load: (*cpunum).load})
	state.Register("sys.filesystem", (*filesystem)(nil), state.Fns{Save: (*filesystem).save, Load: (*filesystem).load})
	state.Register("sys.sys", (*sys)(nil), state.Fns{Save: (*sys).save, Load: (*sys).load})
}
